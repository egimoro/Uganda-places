{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class UgandaServiceService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.ugandaUrl = 'http://localhost:8080/api/ugandaplaces';\n  }\n  getPlaces() {\n    return this.http.get(this.ugandaUrl).pipe(tap(() => this.log('fetched places in Uganda')), catchError(this.handleError('getPlaces', [])));\n  }\n  getPlace(id) {\n    const url = `${this.ugandaUrl}/${id}`;\n    return this.http.get(url).pipe(tap(() => this.log(`fetched place in Uganda with id=${id}`)), catchError(this.handleError(`getPlace id=${id}`)));\n  }\n  updatePlace(place) {\n    const url = `${this.ugandaUrl}/${place.id}`;\n    return this.http.put(url, place, this.httpOptions).pipe(tap(() => this.log(`Place to visit updated id=${place.id}`)), catchError(this.handleError('updatePlace')));\n  }\n  addPlace(place) {\n    return this.http.post(this.ugandaUrl, place, this.httpOptions).pipe(tap(newPlace => this.log(`added place w/ id=${newPlace.id}`)), catchError(this.handleError('addPlace')));\n  }\n  deletePlace(id) {\n    const url = `${this.ugandaUrl}/${id}`;\n    return this.http.delete(url, this.httpOptions).pipe(tap(() => this.log(`deleted place id=${id}`)), catchError(this.handleError('deleteHero')));\n  }\n  deleteAllPlaces() {\n    return this.http.delete(this.ugandaUrl, this.httpOptions).pipe(tap(() => this.log(`deleted all places to visit in Uganda`)), catchError(this.handleError('deleteAllPlaces')));\n  }\n  searchPlaces(term) {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get(`${this.ugandaUrl}?name=${term}`).pipe(tap(x => term.length ? this.log(`found places to visit in Uganda matching \"${term}\"`) : this.log(`no places matching \"${term}\"`)), catchError(this.handleError('searchPlaces', [])));\n  }\n  log(message) {\n    this.messageService.add(`UgandaServiceService: ${message}`);\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result);\n    };\n  }\n}\n_class = UgandaServiceService;\n_class.ɵfac = function UgandaServiceService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","of","catchError","tap","UgandaServiceService","constructor","http","messageService","httpOptions","headers","ugandaUrl","getPlaces","get","pipe","log","handleError","getPlace","id","url","updatePlace","place","put","addPlace","post","newPlace","deletePlace","delete","deleteAllPlaces","searchPlaces","term","trim","x","length","message","add","operation","result","error","console","i0","ɵɵinject","i1","HttpClient","i2","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gimor\\angular\\uganda-places\\src\\app\\uganda-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport { catchError, tap} from 'rxjs/operators';\nimport { MessageService } from './message.service';\n\nimport { UgandaPlace } from './uganda';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UgandaServiceService {\n\n  private httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'}),\n  };\n\n  private ugandaUrl = 'http://localhost:8080/api/ugandaplaces';\n\n  constructor(private http: HttpClient,\n    private messageService: MessageService) { }\n\n    getPlaces(): Observable<UgandaPlace[]>{\n      return this.http.get<UgandaPlace[]>(this.ugandaUrl).pipe(\n        tap(() => this.log('fetched places in Uganda')),\n\n        catchError(this.handleError<UgandaPlace[]>('getPlaces', []))\n      );\n    }\n\n    getPlace(id: number): Observable<UgandaPlace>{\n      const url = `${this.ugandaUrl}/${id}`;\n      return this.http.get<UgandaPlace>(url).pipe(\n        tap(() => this.log(`fetched place in Uganda with id=${id}`)),\n        catchError(this.handleError<UgandaPlace>(`getPlace id=${id}`))\n      );\n    }\n\n    updatePlace(place: UgandaPlace): Observable<any> {\n      const url = `${this.ugandaUrl}/${place.id}`;\n      return this.http.put(url, place, this.httpOptions).pipe(\n        tap(() => this.log(`Place to visit updated id=${place.id}`)),\n        catchError(this.handleError<any>('updatePlace'))\n      );\n    }\n\n    addPlace(place: UgandaPlace): Observable<UgandaPlace> {\n      return this.http.post<UgandaPlace>(this.ugandaUrl, place, this.httpOptions).pipe(\n        tap((newPlace: UgandaPlace) => this.log(`added place w/ id=${newPlace.id}`)),\n        catchError(this.handleError<UgandaPlace>('addPlace'))\n      )\n    }\n\n    deletePlace(id: number): Observable<UgandaPlace>{\n      const url = `${this.ugandaUrl}/${id}`;\n\n      return this.http.delete<UgandaPlace>(url, this.httpOptions).pipe(\n        tap(() => this.log(`deleted place id=${id}`)),\n        catchError(this.handleError<UgandaPlace>('deleteHero'))\n      );\n    }\n\n    deleteAllPlaces(): Observable<any>{\n      return this.http.delete(this.ugandaUrl, this.httpOptions).pipe(\n        tap(()=> this.log(`deleted all places to visit in Uganda`)),\n        catchError(this.handleError<UgandaPlace>('deleteAllPlaces'))\n      );\n    }\n    \n    searchPlaces(term: string): Observable<UgandaPlace[]> {\n      if (!term.trim()) {\n        \n        return of([]);\n        \n      }\n\n      return this.http.get<UgandaPlace[]>(`${this.ugandaUrl}?name=${term}`).pipe(\n        tap((x)=>term.length ? this.log(`found places to visit in Uganda matching \"${term}\"`)\n        : this.log(`no places matching \"${term}\"`)),\n\n        catchError(this.handleError<UgandaPlace[]>('searchPlaces', []))\n      );\n    }\n\n    private log(message: string){\n      this.messageService.add(`UgandaServiceService: ${message}`);\n    }\n\n    private handleError<T>(operation = 'operation', result?: T){\n      return (error: any): Observable<T> =>{\n\n        console.error(error);\n        \n        this.log(`${operation} failed: ${error.message}`);\n\n        return of(result as T);\n      };\n      \n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}